[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-22 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-30 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-8 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-4 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-46 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-16 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,633] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-28 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-36 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-42 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-18 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-24 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-38 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-48 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-6 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-14 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-20 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-44 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-12 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-26 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-34 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-10 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-32 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-40 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), zkVersion=5) (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 08:01:56,634] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 08:01:56,635] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 08:01:56,637] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 08:01:56,638] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 08:01:56,639] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 08:01:56,642] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 08:01:56,644] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,648] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 10 (state.change.logger)
[2020-06-14 08:01:56,649] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 10 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 08:01:56,662] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 8 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 08:01:56,666] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 08:01:56,692] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-7 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-25 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-35 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,693] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-41 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 10 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-23 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-49 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-47 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-31 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,694] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,695] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-37 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,695] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,695] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-17 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,695] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-19 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,695] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-11 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-13 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-43 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,696] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-5 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-29 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 08:01:56,697] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 08:01:56,698] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 08:01:56,701] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,709] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 11 (state.change.logger)
[2020-06-14 08:01:56,710] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 08:01:56,710] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 08:01:56,714] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request STOP_REPLICA with correlation id 12 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 08:01:56,763] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 12 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:01:56,774] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 13 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:01:56,844] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 14 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:01:56,847] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 15 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:01:58,236] TRACE [Controller id=1 epoch=4] Changed partition test2-1 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-06-14 08:01:58,240] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition test2-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:450)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:418)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1398)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:01:58,261] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-22 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-8 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-4 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-7 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,262] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-46 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-25 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-35 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-41 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-23 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-49 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition test2-1 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-47 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,263] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-16 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-28 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-31 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-37 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,264] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-38 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-17 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-19 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-11 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-13 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,265] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-2 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-43 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-14 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-20 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-44 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,266] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-1 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-5 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-26 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-29 from OfflineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-34 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-10 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-32 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,267] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-40 from OnlineReplica to OfflineReplica (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 08:01:58,268] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 08:01:58,269] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 08:01:58,270] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2], offlineReplicas=[2]) to brokers Set(1, 3) for partition test2-1 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 08:01:58,271] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 08:01:58,272] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 08:01:58,272] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 08:01:58,272] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 08:01:58,272] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 08:01:58,272] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2], offlineReplicas=[2]) for partition test2-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,274] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=5, isr=[3], zkVersion=6, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,275] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[3], zkVersion=5, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 12 (state.change.logger)
[2020-06-14 08:01:58,276] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 12 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 08:01:58,309] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 16 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:01:58,313] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 17 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 08:02:01,058] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,058] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,058] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,059] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,062] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,063] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,064] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,065] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,066] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:01,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,105] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,105] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,106] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,121] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,122] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,123] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,124] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,125] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,125] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,125] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,125] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:02:06,125] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 08:03:40,104] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
