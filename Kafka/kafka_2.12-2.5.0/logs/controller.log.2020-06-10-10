[2020-06-10 10:14:29,401] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-06-10 10:14:29,401] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-10 10:14:29,404] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-10 10:14:29,407] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-10 10:14:29,409] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-10 10:14:29,412] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 108) (kafka.controller.KafkaController)
[2020-06-10 10:14:29,423] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-06-10 10:14:29,447] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-10 10:14:29,458] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-10 10:14:29,459] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-06-10 10:14:29,459] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-10 10:14:29,459] INFO [Controller id=1] Current list of topics in the cluster: Set(test, data, streams-plaintext-input, __consumer_offsets, streams-wordcount-output) (kafka.controller.KafkaController)
[2020-06-10 10:14:29,460] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-10 10:14:29,466] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-10 10:14:29,466] INFO [Controller id=1] List of topics ineligible for deletion: data,streams-plaintext-input,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-10 10:14:29,467] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-10 10:14:29,467] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(data, streams-plaintext-input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-10 10:14:29,468] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-10 10:14:29,480] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.7:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-10 10:14:29,481] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-10 10:14:29,489] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-10 10:14:29,537] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-10 10:14:29,638] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=data,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=streams-wordcount-output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=streams-plaintext-input,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=test,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=data,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-10 10:14:29,639] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-10 10:14:29,644] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-10 10:14:29,660] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, streams-wordcount-output-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, streams-plaintext-input-0 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, data-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-10 10:14:29,661] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-06-10 10:14:29,664] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-10 10:14:29,664] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-10 10:14:29,664] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-10 10:14:29,665] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-10 10:14:29,666] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-10 10:14:29,672] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-10 10:14:34,673] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:14:34,674] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:14:34,678] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:14:34,681] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:14:34,681] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:14:34,682] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:14:34,682] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:19:34,682] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:19:34,682] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:19:34,684] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:19:34,684] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:19:34,684] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:19:34,685] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:19:34,685] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:24:34,685] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:24:34,685] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:24:34,687] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:24:34,687] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:24:34,687] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:24:34,687] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:24:34,687] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:29:34,687] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:29:34,687] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:29:34,689] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:29:34,689] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:29:34,689] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:29:34,690] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:29:34,690] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:34:34,690] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:34:34,690] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:34:34,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:34:34,692] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:34:34,692] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:34:34,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:34:34,692] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:39:34,692] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:39:34,692] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:39:34,693] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:39:34,693] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:39:34,694] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:39:34,694] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:39:34,694] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:44:34,694] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:44:34,694] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:44:34,696] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:44:34,696] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:44:34,696] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:44:34,696] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:44:34,696] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:49:34,696] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:49:34,696] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:49:34,697] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:49:34,697] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:49:34,698] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:49:34,698] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:49:34,698] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:54:34,698] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:54:34,698] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:54:34,699] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:54:34,699] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:54:34,699] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:54:34,700] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:54:34,700] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-06-10 10:59:34,700] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-10 10:59:34,700] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-10 10:59:34,703] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(streams-plaintext-input-0 -> Vector(2), __consumer_offsets-22 -> Vector(2, 1), __consumer_offsets-30 -> Vector(2, 1), __consumer_offsets-8 -> Vector(2, 1), __consumer_offsets-4 -> Vector(2, 1), __consumer_offsets-46 -> Vector(2, 1), __consumer_offsets-16 -> Vector(2, 1), __consumer_offsets-28 -> Vector(2, 1), __consumer_offsets-36 -> Vector(2, 1), __consumer_offsets-42 -> Vector(2, 1), __consumer_offsets-18 -> Vector(2, 1), __consumer_offsets-24 -> Vector(2, 1), __consumer_offsets-38 -> Vector(2, 1), __consumer_offsets-48 -> Vector(2, 1), __consumer_offsets-2 -> Vector(2, 1), __consumer_offsets-6 -> Vector(2, 1), __consumer_offsets-14 -> Vector(2, 1), __consumer_offsets-20 -> Vector(2, 1), __consumer_offsets-0 -> Vector(2, 1), __consumer_offsets-44 -> Vector(2, 1), __consumer_offsets-12 -> Vector(2, 1), __consumer_offsets-26 -> Vector(2, 1), __consumer_offsets-34 -> Vector(2, 1), __consumer_offsets-10 -> Vector(2, 1), __consumer_offsets-32 -> Vector(2, 1), __consumer_offsets-40 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2020-06-10 10:59:34,703] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-10 10:59:34,703] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-10 10:59:34,704] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-06-10 10:59:34,704] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
