[2020-06-15 23:12:18,326] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-15 23:18:21,863] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-15 23:19:19,283] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-15 23:19:19,323] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2020-06-15 23:19:19,324] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-15 23:19:19,329] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-15 23:19:19,334] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-15 23:19:19,339] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-15 23:19:19,362] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 21474836510) (kafka.controller.KafkaController)
[2020-06-15 23:19:19,435] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-06-15 23:19:19,500] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-15 23:19:19,529] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-06-15 23:19:19,530] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-15 23:19:19,530] INFO [Controller id=1] Current list of topics in the cluster: Set(test6, test3, test7, __consumer_offsets, test4, test5, test2) (kafka.controller.KafkaController)
[2020-06-15 23:19:19,531] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-15 23:19:19,531] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-15 23:19:19,552] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-15 23:19:19,552] INFO [Controller id=1] List of topics ineligible for deletion: test3,__consumer_offsets,test4,test5 (kafka.controller.KafkaController)
[2020-06-15 23:19:19,554] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-15 23:19:19,557] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test3, __consumer_offsets, test4, test5) (kafka.controller.TopicDeletionManager)
[2020-06-15 23:19:19,557] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-15 23:19:19,577] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-15 23:19:19,586] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.7:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-15 23:19:19,608] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-15 23:19:19,682] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-15 23:19:20,105] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=test6,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=test5,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=test2,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=test7,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=test2,Partition=0,Replica=1] -> OnlineReplica, [Topic=test2,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=test4,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=test3,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-15 23:19:20,105] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-15 23:19:20,112] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-15 23:19:20,289] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, test2-2 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test4-0 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, test7-0 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, test2-1 -> OfflinePartition, test6-0 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, test3-0 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, test5-0 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, test2-0 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-15 23:19:20,289] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2020-06-15 23:19:20,307] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-15 23:19:20,308] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-15 23:19:20,308] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-15 23:19:20,309] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-15 23:19:20,316] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-15 23:19:20,337] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-15 23:19:25,339] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:19:25,339] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:19:25,346] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-22 -> Vector(2, 3), __consumer_offsets-30 -> Vector(2, 3), __consumer_offsets-8 -> Vector(2, 3), __consumer_offsets-4 -> Vector(2, 3), __consumer_offsets-46 -> Vector(2, 3), test3-0 -> Vector(2), __consumer_offsets-16 -> Vector(2, 3), __consumer_offsets-28 -> Vector(2, 3), __consumer_offsets-36 -> Vector(2, 3), __consumer_offsets-42 -> Vector(2, 3), __consumer_offsets-18 -> Vector(2, 3), test4-0 -> Vector(2), __consumer_offsets-24 -> Vector(2, 3), __consumer_offsets-38 -> Vector(2, 3), __consumer_offsets-48 -> Vector(2, 3), __consumer_offsets-2 -> Vector(2, 3), __consumer_offsets-6 -> Vector(2, 3), __consumer_offsets-14 -> Vector(2, 3), __consumer_offsets-20 -> Vector(2, 3), __consumer_offsets-0 -> Vector(2, 3), __consumer_offsets-44 -> Vector(2, 3), __consumer_offsets-12 -> Vector(2, 3), __consumer_offsets-26 -> Vector(2, 3), __consumer_offsets-34 -> Vector(2, 3), __consumer_offsets-10 -> Vector(2, 3), __consumer_offsets-32 -> Vector(2, 3), __consumer_offsets-40 -> Vector(2, 3)) (kafka.controller.KafkaController)
[2020-06-15 23:19:25,347] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,348] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:19:25,348] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:19:25,348] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,348] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:19:25,357] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:19:25,357] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:19:25,357] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:19:25,358] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,358] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,358] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,358] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(__consumer_offsets-21 -> Vector(3, 2), __consumer_offsets-27 -> Vector(3, 2), __consumer_offsets-7 -> Vector(3, 2), __consumer_offsets-9 -> Vector(3, 2), __consumer_offsets-25 -> Vector(3, 2), __consumer_offsets-35 -> Vector(3, 2), __consumer_offsets-41 -> Vector(3, 2), __consumer_offsets-33 -> Vector(3, 2), __consumer_offsets-23 -> Vector(3, 2), __consumer_offsets-49 -> Vector(3, 2), __consumer_offsets-47 -> Vector(3, 2), __consumer_offsets-31 -> Vector(3, 2), __consumer_offsets-3 -> Vector(3, 2), __consumer_offsets-37 -> Vector(3, 2), __consumer_offsets-15 -> Vector(3, 2), __consumer_offsets-17 -> Vector(3, 2), test5-0 -> Vector(3), __consumer_offsets-19 -> Vector(3, 2), __consumer_offsets-11 -> Vector(3, 2), __consumer_offsets-13 -> Vector(3, 2), __consumer_offsets-43 -> Vector(3, 2), __consumer_offsets-39 -> Vector(3, 2), __consumer_offsets-45 -> Vector(3, 2), __consumer_offsets-1 -> Vector(3, 2), __consumer_offsets-5 -> Vector(3, 2), __consumer_offsets-29 -> Vector(3, 2)) (kafka.controller.KafkaController)
[2020-06-15 23:19:25,358] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2020-06-15 23:19:25,359] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:19:34,661] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-15 23:19:34,662] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-15 23:19:34,669] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-15 23:19:34,680] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-15 23:19:34,680] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.13:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-15 23:19:34,828] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-15 23:19:34,830] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 21474836510, 2 -> 21474836583) (kafka.controller.KafkaController)
[2020-06-15 23:19:50,949] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2020-06-15 23:19:50,949] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-06-15 23:19:50,954] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2020-06-15 23:19:50,958] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-15 23:19:50,967] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.10:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-15 23:19:51,001] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2020-06-15 23:19:51,003] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 21474836510, 2 -> 21474836583, 3 -> 21474836651) (kafka.controller.KafkaController)
[2020-06-15 23:19:59,603] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 2, 3) for TopicPartitions: ArrayBuffer(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.controller.KafkaController)
[2020-06-15 23:24:01,098] INFO [Controller id=1] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-1 -> ReplicaAssignment(replicas=3,2, addingReplicas=, removingReplicas=), test-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-15 23:24:01,099] INFO [Controller id=1] New partition creation callback for test-1,test-0 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,359] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:24:25,359] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:24:25,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:24:25,361] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:24:25,362] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,362] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:24:25,365] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:24:25,365] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:24:25,365] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:24:25,365] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,365] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,365] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(__consumer_offsets-21 -> Vector(3, 2), __consumer_offsets-27 -> Vector(3, 2), __consumer_offsets-7 -> Vector(3, 2), __consumer_offsets-9 -> Vector(3, 2), __consumer_offsets-25 -> Vector(3, 2), __consumer_offsets-35 -> Vector(3, 2), __consumer_offsets-41 -> Vector(3, 2), __consumer_offsets-33 -> Vector(3, 2), __consumer_offsets-23 -> Vector(3, 2), __consumer_offsets-49 -> Vector(3, 2), __consumer_offsets-47 -> Vector(3, 2), __consumer_offsets-31 -> Vector(3, 2), __consumer_offsets-3 -> Vector(3, 2), __consumer_offsets-37 -> Vector(3, 2), __consumer_offsets-15 -> Vector(3, 2), __consumer_offsets-17 -> Vector(3, 2), __consumer_offsets-19 -> Vector(3, 2), __consumer_offsets-11 -> Vector(3, 2), __consumer_offsets-13 -> Vector(3, 2), __consumer_offsets-43 -> Vector(3, 2), __consumer_offsets-39 -> Vector(3, 2), __consumer_offsets-45 -> Vector(3, 2), __consumer_offsets-1 -> Vector(3, 2), __consumer_offsets-5 -> Vector(3, 2), __consumer_offsets-29 -> Vector(3, 2)) (kafka.controller.KafkaController)
[2020-06-15 23:24:25,366] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.9259259259259259 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,366] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions __consumer_offsets-21,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-31,__consumer_offsets-3,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-17,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-43,__consumer_offsets-39,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-29 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-21 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-27 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-7 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-9 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-25 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-35 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-41 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-33 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-23 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-49 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-47 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-31 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-3 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-37 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-15 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-17 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-19 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-11 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-13 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-43 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-39 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-45 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-1 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-5 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:24:25,413] INFO [Controller id=1] Partition __consumer_offsets-29 completed preferred replica leader election. New leader is 3 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,414] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:29:25,414] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:29:25,415] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:29:25,415] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:29:25,416] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,416] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:29:25,420] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:29:25,420] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:29:25,420] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:29:25,420] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,420] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,420] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:29:25,420] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:29:25,420] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,421] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:34:25,421] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:34:25,423] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:34:25,423] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,423] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:34:25,423] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,423] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:34:25,426] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:34:25,426] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:34:25,426] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:34:25,426] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,426] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,426] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:34:25,426] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:34:25,426] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,427] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:39:25,427] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:39:25,428] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:39:25,428] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,428] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:39:25,428] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,428] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:39:25,432] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:39:25,432] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:39:25,432] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:39:25,432] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,432] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,433] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:39:25,433] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:39:25,433] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,433] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:44:25,433] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:44:25,434] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:44:25,434] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,434] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:44:25,434] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,434] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:44:25,438] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:44:25,438] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:44:25,438] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:44:25,438] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,438] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,438] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:44:25,438] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:44:25,438] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,439] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:49:25,439] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:49:25,440] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:49:25,440] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,440] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:49:25,440] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,440] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:49:25,444] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:49:25,444] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:49:25,444] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:49:25,444] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,444] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,444] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:49:25,444] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:49:25,444] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,445] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:54:25,445] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:54:25,446] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:54:25,446] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,446] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:54:25,446] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,446] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:54:25,450] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:54:25,450] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:54:25,450] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:54:25,450] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,450] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,450] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:54:25,450] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:54:25,450] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,450] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-15 23:59:25,451] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-15 23:59:25,451] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-15 23:59:25,452] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,452] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(test2-1 -> Vector(1), test2-2 -> Vector(1), test2-0 -> Vector(1)) (kafka.controller.KafkaController)
[2020-06-15 23:59:25,452] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.6 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,452] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test2-1,test2-2,test2-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-15 23:59:25,455] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-2 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:59:25,455] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-1 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:59:25,455] ERROR [Controller id=1] Error completing replica leader election (PREFERRED) for partition test2-0 (kafka.controller.KafkaController)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy PreferredReplicaPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.onReplicaElection(KafkaController.scala:702)
	at kafka.controller.KafkaController.$anonfun$checkAndTriggerAutoLeaderRebalance$5(KafkaController.scala:1071)
	at scala.collection.immutable.Map$Map3.foreach(Map.scala:195)
	at kafka.controller.KafkaController.checkAndTriggerAutoLeaderRebalance(KafkaController.scala:1052)
	at kafka.controller.KafkaController.processAutoPreferredReplicaLeaderElection(KafkaController.scala:1080)
	at kafka.controller.KafkaController.process(KafkaController.scala:1818)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-15 23:59:25,455] WARN [Controller id=1] Partition test2-1 failed to complete preferred replica leader election to 1. Leader is still 2 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,456] WARN [Controller id=1] Partition test2-2 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,456] WARN [Controller id=1] Partition test2-0 failed to complete preferred replica leader election to 1. Leader is still -1 (kafka.controller.KafkaController)
[2020-06-15 23:59:25,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-15 23:59:25,456] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
