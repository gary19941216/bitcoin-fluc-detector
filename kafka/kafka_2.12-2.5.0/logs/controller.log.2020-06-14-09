[2020-06-14 09:01:39,509] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-14 09:02:08,670] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-14 09:02:08,737] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-06-14 09:02:08,737] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-14 09:02:08,744] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-14 09:02:08,754] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-14 09:02:08,758] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-14 09:02:08,773] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 12884901903) (kafka.controller.KafkaController)
[2020-06-14 09:02:08,810] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-06-14 09:02:08,933] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-14 09:02:08,965] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-06-14 09:02:08,965] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-14 09:02:08,966] INFO [Controller id=1] Current list of topics in the cluster: Set(test2, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-14 09:02:08,966] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-14 09:02:08,973] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-14 09:02:08,982] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-14 09:02:08,983] INFO [Controller id=1] List of topics ineligible for deletion: test2,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-14 09:02:08,983] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-14 09:02:08,984] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test2, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-14 09:02:08,985] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-14 09:02:09,018] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-14 09:02:09,021] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.7:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-14 09:02:09,034] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-14 09:02:09,069] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-14 09:02:09,545] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=test2,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=test2,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=test2,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-14 09:02:09,546] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-14 09:02:09,560] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-14 09:02:09,683] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, test2-2 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, test2-1 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, test2-0 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-14 09:02:09,683] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-06-14 09:02:09,689] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-14 09:02:09,689] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-14 09:02:09,690] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-14 09:02:09,690] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-14 09:02:09,692] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-14 09:02:09,705] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-14 09:02:14,706] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:02:14,707] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:02:14,714] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-22 -> Vector(2, 3), __consumer_offsets-30 -> Vector(2, 3), __consumer_offsets-8 -> Vector(2, 3), __consumer_offsets-4 -> Vector(2, 3), __consumer_offsets-46 -> Vector(2, 3), test2-1 -> Vector(2), __consumer_offsets-16 -> Vector(2, 3), __consumer_offsets-28 -> Vector(2, 3), __consumer_offsets-36 -> Vector(2, 3), __consumer_offsets-42 -> Vector(2, 3), __consumer_offsets-18 -> Vector(2, 3), __consumer_offsets-24 -> Vector(2, 3), __consumer_offsets-38 -> Vector(2, 3), __consumer_offsets-48 -> Vector(2, 3), __consumer_offsets-2 -> Vector(2, 3), __consumer_offsets-6 -> Vector(2, 3), __consumer_offsets-14 -> Vector(2, 3), __consumer_offsets-20 -> Vector(2, 3), __consumer_offsets-0 -> Vector(2, 3), __consumer_offsets-44 -> Vector(2, 3), __consumer_offsets-12 -> Vector(2, 3), __consumer_offsets-26 -> Vector(2, 3), __consumer_offsets-34 -> Vector(2, 3), __consumer_offsets-10 -> Vector(2, 3), __consumer_offsets-32 -> Vector(2, 3), __consumer_offsets-40 -> Vector(2, 3)) (kafka.controller.KafkaController)
[2020-06-14 09:02:14,716] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-14 09:02:14,717] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-14 09:02:14,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(__consumer_offsets-21 -> Vector(3, 2), __consumer_offsets-27 -> Vector(3, 2), __consumer_offsets-7 -> Vector(3, 2), __consumer_offsets-9 -> Vector(3, 2), __consumer_offsets-25 -> Vector(3, 2), __consumer_offsets-35 -> Vector(3, 2), __consumer_offsets-41 -> Vector(3, 2), __consumer_offsets-33 -> Vector(3, 2), __consumer_offsets-23 -> Vector(3, 2), __consumer_offsets-49 -> Vector(3, 2), __consumer_offsets-47 -> Vector(3, 2), __consumer_offsets-31 -> Vector(3, 2), __consumer_offsets-3 -> Vector(3, 2), __consumer_offsets-37 -> Vector(3, 2), __consumer_offsets-15 -> Vector(3, 2), __consumer_offsets-17 -> Vector(3, 2), test2-2 -> Vector(3), __consumer_offsets-19 -> Vector(3, 2), __consumer_offsets-11 -> Vector(3, 2), __consumer_offsets-13 -> Vector(3, 2), __consumer_offsets-43 -> Vector(3, 2), __consumer_offsets-39 -> Vector(3, 2), __consumer_offsets-45 -> Vector(3, 2), __consumer_offsets-1 -> Vector(3, 2), __consumer_offsets-5 -> Vector(3, 2), __consumer_offsets-29 -> Vector(3, 2), test2-0 -> Vector(3)) (kafka.controller.KafkaController)
[2020-06-14 09:02:14,717] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2020-06-14 09:02:14,717] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-14 09:02:15,870] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,3 (kafka.controller.KafkaController)
[2020-06-14 09:02:15,871] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-06-14 09:02:15,878] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2020-06-14 09:02:15,883] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-14 09:02:15,887] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.10:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-14 09:02:16,065] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2020-06-14 09:02:16,068] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 12884901903, 3 -> 12884901974) (kafka.controller.KafkaController)
[2020-06-14 09:02:38,243] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2020-06-14 09:02:38,243] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-14 09:02:38,252] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-14 09:02:38,257] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-14 09:02:38,262] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.0.13:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-14 09:02:38,290] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-14 09:02:38,292] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 12884901903, 3 -> 12884901974, 2 -> 12884902042) (kafka.controller.KafkaController)
[2020-06-14 09:02:45,817] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 3, 2) for TopicPartitions: ArrayBuffer(__consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.controller.KafkaController)
[2020-06-14 09:03:31,157] INFO [Controller id=1] New topics: [Set(test3)], deleted topics: [Set()], new partition replica assignment [Map(test3-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-14 09:03:31,158] INFO [Controller id=1] New partition creation callback for test3-0 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,718] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:07:14,718] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:07:14,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-22 -> Vector(2, 3), __consumer_offsets-30 -> Vector(2, 3), __consumer_offsets-8 -> Vector(2, 3), __consumer_offsets-4 -> Vector(2, 3), __consumer_offsets-46 -> Vector(2, 3), __consumer_offsets-16 -> Vector(2, 3), __consumer_offsets-28 -> Vector(2, 3), __consumer_offsets-36 -> Vector(2, 3), __consumer_offsets-42 -> Vector(2, 3), __consumer_offsets-18 -> Vector(2, 3), __consumer_offsets-24 -> Vector(2, 3), __consumer_offsets-38 -> Vector(2, 3), __consumer_offsets-48 -> Vector(2, 3), __consumer_offsets-2 -> Vector(2, 3), __consumer_offsets-6 -> Vector(2, 3), __consumer_offsets-14 -> Vector(2, 3), __consumer_offsets-20 -> Vector(2, 3), __consumer_offsets-0 -> Vector(2, 3), __consumer_offsets-44 -> Vector(2, 3), __consumer_offsets-12 -> Vector(2, 3), __consumer_offsets-26 -> Vector(2, 3), __consumer_offsets-34 -> Vector(2, 3), __consumer_offsets-10 -> Vector(2, 3), __consumer_offsets-32 -> Vector(2, 3), __consumer_offsets-40 -> Vector(2, 3)) (kafka.controller.KafkaController)
[2020-06-14 09:07:14,720] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.9259259259259259 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,720] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-4,__consumer_offsets-46,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-18,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-48,__consumer_offsets-2,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-12,__consumer_offsets-26,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-22 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-30 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-8 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-4 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-46 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-16 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-28 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-36 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-42 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,780] INFO [Controller id=1] Partition __consumer_offsets-18 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-24 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-38 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-48 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-2 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-6 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-14 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-20 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-44 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-12 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-26 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-34 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-10 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-32 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] INFO [Controller id=1] Partition __consumer_offsets-40 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:07:14,782] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:12:14,782] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:12:14,783] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:12:14,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:12:14,785] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:12:14,785] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:12:14,785] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:17:14,785] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:17:14,785] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:17:14,786] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:17:14,787] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:17:14,787] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:17:14,787] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:22:14,787] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:22:14,787] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:22:14,788] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:22:14,789] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:22:14,789] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:22:14,789] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:27:14,789] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:27:14,789] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:27:14,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:27:14,790] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:27:14,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:27:14,790] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:32:14,791] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:32:14,791] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:32:14,792] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:32:14,792] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:32:14,792] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:32:14,792] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:37:14,793] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:37:14,793] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:37:14,794] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:37:14,794] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:37:14,794] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:37:14,794] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:42:14,794] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:42:14,795] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:42:14,796] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:42:14,796] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:42:14,796] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:42:14,796] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:47:14,796] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:47:14,796] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:47:14,797] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:47:14,798] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:47:14,798] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:47:14,798] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:52:14,798] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:52:14,798] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:52:14,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:52:14,799] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:52:14,799] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:52:14,799] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:57:14,799] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-14 09:57:14,799] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-14 09:57:14,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-14 09:57:14,800] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-14 09:57:14,800] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-06-14 09:57:14,800] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
