[2020-06-14 07:39:48,218] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2020-06-14 07:43:10,851] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2020-06-14 07:45:31,801] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,802] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,802] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,805] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,805] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,806] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,807] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,807] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,808] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,810] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,810] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,811] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,813] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,813] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,814] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,814] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition test2-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,815] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,818] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,819] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,827] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,828] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,828] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,829] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,829] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,829] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,830] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,830] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,831] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,831] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,831] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,832] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,832] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,833] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,833] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,833] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,834] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,837] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,838] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,838] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,839] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,839] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,840] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,840] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,840] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,841] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,841] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,841] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,842] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,842] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,843] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,843] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,846] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:45:31,905] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,906] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,906] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,906] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,906] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,907] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,910] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,910] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,911] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,911] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,911] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,911] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,912] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,912] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,912] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,913] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,913] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,913] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,913] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,914] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,914] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,914] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,914] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,915] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,916] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,918] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,918] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,919] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,919] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition test2-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,919] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,919] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,920] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,920] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,920] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,920] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,921] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,921] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,921] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,921] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,922] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,922] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,922] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,922] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,923] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,923] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,931] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,932] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,932] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,932] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,932] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition test2-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,932] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,933] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[3]) to brokers Set(1) for partition test2-2 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:45:31,934] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition test2-1 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:45:31,935] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:45:31,936] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[3]) to brokers Set(1) for partition test2-0 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:45:31,937] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:45:31,938] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:45:31,938] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:45:31,938] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:45:31,938] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) to brokers Set(1) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:45:31,938] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) to brokers Set(1) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:45:31,959] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[3]) for partition test2-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) for partition test2-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[3]) for partition test2-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,960] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,964] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,965] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[3, 2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,966] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2, 3]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 1 (state.change.logger)
[2020-06-14 07:45:31,967] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 1 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:45:32,067] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,071] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,072] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,072] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,072] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,073] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,073] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,074] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,074] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,074] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,074] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,075] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,075] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,075] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,076] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,076] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition test2-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,076] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,077] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,077] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,077] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,078] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,078] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,079] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,079] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,079] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,080] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,080] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,080] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,080] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,081] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition test2-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,081] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,081] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,081] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,082] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,082] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,082] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,082] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,082] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,083] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,083] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,083] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,083] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,084] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,084] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,084] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,084] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,085] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,085] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,085] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,085] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,085] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition test2-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,086] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:32,086] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,395] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:45:50,400] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:45:50,400] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:45:50,400] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) to brokers Set(3) for partition test2-2 (state.change.logger)
[2020-06-14 07:45:50,400] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:45:50,407] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[2]) to brokers Set(3) for partition test2-1 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) to brokers Set(3) for partition test2-0 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:45:50,408] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:45:50,409] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:45:50,409] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:45:50,409] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:45:50,409] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:45:50,417] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-19 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,418] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-23 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,418] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition test2-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,418] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-4 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,418] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-12 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,418] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-49 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,419] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-40 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,419] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,419] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-31 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,419] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-39 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,419] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-30 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,420] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-27 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,420] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-3 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,420] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-16 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,420] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-5 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,420] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-26 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,421] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-32 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,421] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-29 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,421] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-15 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,421] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-28 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,421] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-35 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,422] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-10 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,422] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-7 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,422] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-47 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,422] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition test2-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,422] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-37 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,423] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-48 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,423] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-36 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,423] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-41 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,423] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-45 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,423] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-43 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,424] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-44 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,424] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-20 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,424] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-25 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,424] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,424] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-24 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,425] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-9 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,425] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-34 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,425] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-46 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,425] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,425] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-14 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,426] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-18 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,426] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-17 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,426] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-13 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,426] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-33 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,426] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-6 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-38 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-22 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-42 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-11 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-8 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,427] TRACE [Controller id=1 epoch=4] Changed state of replica 3 for partition __consumer_offsets-21 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition test2-2 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:45:50,429] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition test2-0 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:45:50,430] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:45:50,431] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:45:50,433] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:45:50,433] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:45:50,433] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) to brokers Set(1, 3) for partition test2-2 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:45:50,434] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) to brokers Set(1, 3) for partition test2-0 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:45:50,435] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:45:50,436] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) to brokers Set(1, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) for partition test2-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[3], zkVersion=2, replicas=[3], offlineReplicas=[]) for partition test2-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,440] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,441] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,442] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 3 (state.change.logger)
[2020-06-14 07:45:50,442] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 3 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:45:50,519] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,520] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,520] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,520] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,521] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,522] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,522] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,522] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,522] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,523] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,523] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,524] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,524] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,525] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,525] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,525] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition test2-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition test2-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,526] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,527] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,527] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,527] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,529] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,529] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,530] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,530] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,530] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,530] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,531] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,531] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,531] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,532] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,532] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,532] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,535] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,535] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,535] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,536] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,536] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,537] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,537] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,537] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,538] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,538] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,538] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,538] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,539] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,539] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,539] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,540] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,540] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,540] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,540] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:365)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1388)
	at kafka.controller.KafkaController.process(KafkaController.scala:1834)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-14 07:45:50,542] TRACE [Controller id=1 epoch=4] Changed partition test2-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=3, isr=List(3), zkVersion=3) (state.change.logger)
[2020-06-14 07:45:50,542] TRACE [Controller id=1 epoch=4] Changed partition test2-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=3, isr=List(3), zkVersion=3) (state.change.logger)
[2020-06-14 07:45:50,542] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition test2-2 (state.change.logger)
[2020-06-14 07:45:50,543] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition test2-0 (state.change.logger)
[2020-06-14 07:45:50,543] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) to brokers Set(1, 3) for partition test2-2 (state.change.logger)
[2020-06-14 07:45:50,543] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) to brokers Set(1, 3) for partition test2-0 (state.change.logger)
[2020-06-14 07:45:50,545] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) for partition test2-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2020-06-14 07:45:50,545] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) for partition test2-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 4 (state.change.logger)
[2020-06-14 07:45:50,546] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:45:50,883] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:45:51,213] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=test2,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=test2,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:45:51,219] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:45:51,256] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=test2,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=test2,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:45:51,259] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:46:12,738] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:46:12,739] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=2, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) to brokers Set(2) for partition test2-2 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[]) to brokers Set(2) for partition test2-1 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,740] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=0, controllerEpoch=4, leader=3, leaderEpoch=3, isr=[3], zkVersion=3, replicas=[3], offlineReplicas=[]) to brokers Set(2) for partition test2-0 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,741] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-27 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-12 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-13 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-44 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-37 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-16 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-18 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,743] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-48 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-9 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-42 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-31 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-28 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-32 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-34 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-22 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-20 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,744] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-19 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-35 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-21 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-3 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-43 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,745] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-47 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-46 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-40 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition test2-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-25 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,746] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-24 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-17 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-11 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-41 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-30 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,747] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-33 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-5 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-6 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-15 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-4 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,748] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-38 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-36 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-26 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-49 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-39 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,749] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-7 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,750] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-29 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,750] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-23 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,750] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-14 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,750] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-8 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,750] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-10 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Changed state of replica 2 for partition __consumer_offsets-45 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition test2-1 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,751] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,752] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition test2-1 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,753] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,754] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,757] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=1, isr=[2], zkVersion=1, replicas=[2], offlineReplicas=[]) for partition test2-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,757] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,757] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,757] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,757] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,758] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 6 (state.change.logger)
[2020-06-14 07:46:12,759] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:46:12,763] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,871] TRACE [Controller id=1 epoch=4] Changed partition test2-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), zkVersion=2) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,872] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition test2-1 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,873] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,874] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,875] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,876] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,879] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,879] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,879] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,879] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:12,880] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition test2-1 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:12,881] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:12,882] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test2', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[]) for partition test2-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,885] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,886] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 7 (state.change.logger)
[2020-06-14 07:46:12,887] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:46:12,993] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 7 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:46:12,998] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:46:13,240] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:13,611] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=test2,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:13,617] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:13,835] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=test2,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:13,844] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:20,155] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-14 07:46:20,171] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:46:20,172] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-14 07:46:20,173] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,177] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,178] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=3, isr=[2, 3], zkVersion=4, replicas=[2, 3], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 8 (state.change.logger)
[2020-06-14 07:46:20,179] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:46:20,180] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:46:20,188] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-21 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-27 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-7 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-9 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-25 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-35 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-41 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-33 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-23 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-49 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-47 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-31 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-37 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-15 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-17 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-19 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-11 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-13 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-43 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-39 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-45 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-1 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-5 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,175] TRACE [Controller id=1 epoch=4] Changed partition __consumer_offsets-29 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(2, 3), zkVersion=5) (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:50:37,176] TRACE [Controller id=1 epoch=4] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:50:37,177] TRACE [Controller id=1 epoch=4] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-14 07:50:37,178] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-14 07:50:37,179] TRACE [Controller id=1 epoch=4] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,182] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=4, leader=3, leaderEpoch=4, isr=[2, 3], zkVersion=5, replicas=[3, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 4 with correlation id 9 (state.change.logger)
[2020-06-14 07:50:37,183] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 9 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-14 07:50:37,260] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 10 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:50:37,265] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 11 sent to broker 10.0.0.10:9092 (id: 3 rack: null) (state.change.logger)
[2020-06-14 07:50:37,266] TRACE [Controller id=1 epoch=4] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 6 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-14 07:50:37,269] TRACE [Controller id=1 epoch=4] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
