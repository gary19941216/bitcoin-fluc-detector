[2020-06-11 08:49:15,369] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,370] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,370] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,370] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,370] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,370] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,371] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,371] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,371] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,371] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,372] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,372] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,372] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,372] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,373] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,373] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,373] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,373] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,374] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,374] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,375] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,375] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,375] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,375] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,376] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,377] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition data-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition data-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,378] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,379] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,379] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,379] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,379] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:15,379] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,423] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,424] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,425] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,426] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,427] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,428] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,429] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition data-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition data-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,430] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:20,431] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,461] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,462] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,463] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,464] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,465] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,466] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,467] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition data-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition data-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,468] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,469] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,469] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,469] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:49:25,469] ERROR [Controller id=1 epoch=4] Controller 1 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1141)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1103)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1103)
	at kafka.controller.KafkaController.process(KafkaController.scala:1826)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:57:11,899] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2020-06-11 08:57:32,716] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition data-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,717] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-12 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,717] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-47 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,717] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-28 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,718] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-29 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,718] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-32 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,719] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,724] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-10 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,725] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-18 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,725] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-23 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,726] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-39 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,726] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-43 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,727] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-15 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,734] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-13 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,734] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-2 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,735] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition test-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,735] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-44 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,736] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-27 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,736] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-19 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,736] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-11 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,737] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-37 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,737] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-45 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,738] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-41 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,738] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-3 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,738] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-17 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,739] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-14 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,751] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-21 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,752] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-26 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,753] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-8 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,753] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-25 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,754] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-38 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,755] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-48 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,755] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-1 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,757] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-42 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,757] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-7 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,758] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-9 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,759] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-24 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,760] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-33 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,760] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-5 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,760] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-31 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,761] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-40 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,761] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-22 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,763] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-34 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,764] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-6 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,764] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-35 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,788] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-49 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,796] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition streams-wordcount-output-0 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,796] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-4 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,796] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-20 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,797] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-16 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,797] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-46 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,797] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-36 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,798] TRACE [Controller id=1 epoch=5] Changed state of replica 1 for partition __consumer_offsets-30 from OnlineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:57:32,800] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:32,800] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='streams-wordcount-output', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition streams-wordcount-output-0 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:32,801] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:32,802] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:32,803] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:32,813] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:32,813] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition test-0 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:32,814] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:32,815] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:32,815] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:32,816] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:32,820] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition data-0 (state.change.logger)
[2020-06-11 08:57:32,820] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-wordcount-output', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers Set(1) for partition streams-wordcount-output-0 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:32,826] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:32,827] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:32,839] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:32,839] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:32,839] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:32,839] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:32,839] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers Set(1) for partition test-0 (state.change.logger)
[2020-06-11 08:57:32,840] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:32,841] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition data-0 (state.change.logger)
[2020-06-11 08:57:32,842] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:32,845] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,845] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='test', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='streams-wordcount-output', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,846] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,847] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,848] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 1 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:32,911] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition streams-plaintext-input-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,912] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-22 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,912] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-30 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,912] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-8 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,913] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-21 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,913] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-4 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,913] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-27 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,913] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-7 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,914] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-9 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,921] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-46 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,921] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-25 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,922] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-35 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,922] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-41 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,922] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-33 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,923] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-23 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,923] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-49 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,923] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-47 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,924] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-16 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,924] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-28 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,924] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-31 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,925] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-36 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,925] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-42 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,925] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-3 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,926] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-18 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,926] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-37 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,926] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-15 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,927] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-24 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,927] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-38 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,927] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-17 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,927] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-48 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,928] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-19 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,928] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-11 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,928] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-13 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,929] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-2 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,929] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-43 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,929] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-6 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,929] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-14 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,930] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-20 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,930] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,930] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-44 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,931] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-39 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,931] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-12 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,934] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition data-0 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,934] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-45 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,935] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-1 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,937] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-5 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,938] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-26 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,938] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-29 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,938] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-34 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,938] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-10 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,939] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-32 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,939] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-40 from ReplicaDeletionIneligible to OfflineReplica (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:32,940] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:32,941] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:32,942] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:32,943] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:32,947] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 1 for partition data-0 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:32,948] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) to brokers Set(1) for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:32,949] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) to brokers Set(1) for partition data-0 (state.change.logger)
[2020-06-11 08:57:32,950] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) to brokers Set(1) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:33,005] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition streams-plaintext-input-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition streams-plaintext-input-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:427)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:424)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:335)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:236)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:246)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1344)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1231)
	at kafka.controller.KafkaController.process(KafkaController.scala:1864)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:128)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:131)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition data-0 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition streams-wordcount-output-0 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:33,037] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition test-0 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:33,038] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 epoch 5 starting the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:33,093] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-0 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,098] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition data-0 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,102] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-29 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,107] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-48 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,113] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-10 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,117] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-45 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,122] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-26 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,127] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition streams-wordcount-output-0 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,131] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-7 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,136] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-42 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,140] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-4 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,144] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-23 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,149] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-1 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,154] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-39 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,159] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-20 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,164] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-17 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,168] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-36 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,174] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-14 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,180] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-33 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,186] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-49 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,190] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-11 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,195] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-30 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,197] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition test-0 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,201] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-46 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,205] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-27 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,209] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-8 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,213] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-24 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,217] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-43 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,221] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-5 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,225] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-21 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,232] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-40 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,237] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-2 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,241] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-37 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,246] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-18 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,251] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-34 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,259] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-15 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,264] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-12 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,268] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-31 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,273] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-9 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,277] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-47 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,281] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-19 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,286] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-28 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,289] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-38 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,293] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-35 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,297] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-6 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,301] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-44 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,305] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-25 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,309] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-16 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,313] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-22 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,318] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-41 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,323] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-32 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,327] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-3 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,332] TRACE [Broker id=1] Stopped fetchers as part of become-leader request from controller 1 epoch 5 with correlation id 1 for partition __consumer_offsets-13 (last update controller epoch 3) (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition data-0 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition streams-wordcount-output-0 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition test-0 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:57:33,333] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:57:33,334] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 1 from controller 1 epoch 5 for the become-leader transition for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:57:33,359] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=streams-wordcount-output,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=test,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=data,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:57:33,367] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition data-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,367] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='test', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) for partition test-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,367] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='streams-wordcount-output', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) for partition streams-wordcount-output-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,367] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,367] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,368] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,369] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2020-06-11 08:57:33,372] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,377] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,378] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) correlation id 3 from controller 1 epoch 5 (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition data-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-49 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-38 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-16 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-27 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-8 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-19 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-13 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-46 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-35 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-24 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,380] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-5 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-43 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-32 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-21 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-10 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-37 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-48 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-40 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-18 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-29 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-7 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-23 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-45 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-34 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-26 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-15 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-42 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-31 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-9 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-20 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-12 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-28 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-17 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-6 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-39 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-44 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-36 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-47 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-25 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-14 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-30 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-41 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-22 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,381] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-33 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,382] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-11 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,382] DEBUG [Broker id=1] Ignoring LeaderAndIsr request from controller 1 with correlation id 3 epoch 5 for partition __consumer_offsets-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2020-06-11 08:57:33,386] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=11,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=11,_tagged_fields={}},{topic_name=data,partition_index=0,error_code=11,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[2]) for partition streams-plaintext-input-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition data-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,396] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[2]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,397] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[2]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2020-06-11 08:57:33,404] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-wordcount-output', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=0, isr=[1], zkVersion=0, replicas=[1], offlineReplicas=[]) to brokers Set(2) for partition streams-wordcount-output-0 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:58:13,519] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[]) to brokers Set(2) for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='test', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=3, isr=[1], zkVersion=3, replicas=[1], offlineReplicas=[]) to brokers Set(2) for partition test-0 (state.change.logger)
[2020-06-11 08:58:13,520] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(2) for partition data-0 (state.change.logger)
[2020-06-11 08:58:13,521] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(2) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:58:13,534] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-27 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,535] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-12 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,535] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-13 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,535] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-44 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,536] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-37 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,536] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-16 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,536] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-18 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-48 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-9 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-42 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-31 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-28 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,537] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-32 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,538] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-34 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,538] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-22 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,538] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-20 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,538] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-19 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,538] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-35 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,539] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,539] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-21 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,539] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-3 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,539] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-43 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,539] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-47 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,540] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-46 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,540] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-40 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,540] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-2 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,540] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-25 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,540] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-24 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,541] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-17 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,541] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-11 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,541] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-41 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,541] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-1 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,541] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-30 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,543] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-33 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-5 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-6 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-15 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-4 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-38 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-36 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-26 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-49 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,544] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-39 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-7 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-29 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-23 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-14 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition streams-plaintext-input-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,545] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-8 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-10 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition data-0 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Changed state of replica 2 for partition __consumer_offsets-45 from OfflineReplica to OnlineReplica (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:58:13,546] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:58:13,547] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition data-0 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:58:13,548] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[]) to brokers Set(1, 2) for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:58:13,549] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition data-0 (state.change.logger)
[2020-06-11 08:58:13,550] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=-1, leaderEpoch=2, isr=[2], zkVersion=2, replicas=[2], offlineReplicas=[]) for partition streams-plaintext-input-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition data-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,555] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,556] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=5, leader=1, leaderEpoch=1, isr=[1], zkVersion=1, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2020-06-11 08:58:13,557] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 6 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:58:13,558] TRACE [Controller id=1 epoch=5] Changed partition streams-plaintext-input-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2), zkVersion=3) (state.change.logger)
[2020-06-11 08:58:13,559] TRACE [Controller id=1 epoch=5] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2], addingReplicas=[], removingReplicas=[], isNew=false) to broker 2 for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:58:13,559] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2], offlineReplicas=[]) to brokers Set(1, 2) for partition streams-plaintext-input-0 (state.change.logger)
[2020-06-11 08:58:13,562] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='streams-plaintext-input', partitionIndex=0, controllerEpoch=5, leader=2, leaderEpoch=3, isr=[2], zkVersion=3, replicas=[2], offlineReplicas=[]) for partition streams-plaintext-input-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 7 (state.change.logger)
[2020-06-11 08:58:13,563] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 7 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:58:13,917] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 0 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-11 08:58:14,438] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=__consumer_offsets,partition_index=49,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=38,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=27,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=16,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=8,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=19,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=13,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=2,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=46,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=24,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=35,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=5,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=43,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=32,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=21,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=10,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=37,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=48,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=29,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=40,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=18,error_code=0,_tagged_fields={}},{topic_name=streams-plaintext-input,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=7,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=45,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=23,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=34,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=26,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=4,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=15,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=42,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=20,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=31,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=9,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=1,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=12,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=17,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=28,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=6,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=39,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=44,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=36,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=47,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=3,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=14,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=25,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=30,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=41,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=11,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=33,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=22,error_code=0,_tagged_fields={}},{topic_name=__consumer_offsets,partition_index=0,error_code=0,_tagged_fields={}},{topic_name=data,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 1 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-11 08:58:14,443] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 2 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-11 08:58:14,487] TRACE [Controller id=1 epoch=5] Received response {error_code=0,partition_errors=[{topic_name=streams-plaintext-input,partition_index=0,error_code=0,_tagged_fields={}}],_tagged_fields={}} for request LEADER_AND_ISR with correlation id 3 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-11 08:58:14,489] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 4 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-49 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-38 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-16 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-27 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-19 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-8 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-2 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-13 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-24 (state.change.logger)
[2020-06-11 08:58:22,101] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-35 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-46 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-5 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-43 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-32 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-21 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-10 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-37 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-48 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-40 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-29 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-18 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-7 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-34 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-45 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-23 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-26 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-15 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-4 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-42 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-20 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-31 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-9 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-1 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-12 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-17 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-28 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-6 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-39 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-44 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-36 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-47 (state.change.logger)
[2020-06-11 08:58:22,102] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-14 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-3 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-25 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-41 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-30 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-11 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-33 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-22 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) to brokers Set(1, 2) for partition data-0 (state.change.logger)
[2020-06-11 08:58:22,103] TRACE [Controller id=1 epoch=5] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) to brokers Set(1, 2) for partition __consumer_offsets-0 (state.change.logger)
[2020-06-11 08:58:22,105] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='data', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition data-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,105] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,106] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[1, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,107] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=1, isr=[1, 2], zkVersion=2, replicas=[2, 1], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2020-06-11 08:58:22,108] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 8 sent to broker 10.0.0.7:9092 (id: 1 rack: null) (state.change.logger)
[2020-06-11 08:58:22,111] TRACE [Controller id=1 epoch=5] Received response {error_code=0,_tagged_fields={}} for request UPDATE_METADATA with correlation id 5 sent to broker 10.0.0.13:9092 (id: 2 rack: null) (state.change.logger)
